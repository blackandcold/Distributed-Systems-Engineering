// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package at.ac.tuwien.dse.fairsurgeries.service;

import at.ac.tuwien.dse.fairsurgeries.domain.OPSlot;
import at.ac.tuwien.dse.fairsurgeries.repository.OPSlotRepository;
import at.ac.tuwien.dse.fairsurgeries.service.OPSlotServiceImpl;
import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect OPSlotServiceImpl_Roo_Service {
    
    declare @type: OPSlotServiceImpl: @Service;
    
    declare @type: OPSlotServiceImpl: @Transactional;
    
    @Autowired
    OPSlotRepository OPSlotServiceImpl.oPSlotRepository;
    
    public long OPSlotServiceImpl.countAllOPSlots() {
        return oPSlotRepository.count();
    }
    
    public void OPSlotServiceImpl.deleteOPSlot(OPSlot OPSlot_) {
        oPSlotRepository.delete(OPSlot_);
    }
    
    public OPSlot OPSlotServiceImpl.findOPSlot(BigInteger id) {
        return oPSlotRepository.findOne(id);
    }
    
    public List<OPSlot> OPSlotServiceImpl.findAllOPSlots() {
        return oPSlotRepository.findAll();
    }
    
    public List<OPSlot> OPSlotServiceImpl.findOPSlotEntries(int firstResult, int maxResults) {
        return oPSlotRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void OPSlotServiceImpl.saveOPSlot(OPSlot OPSlot_) {
        oPSlotRepository.save(OPSlot_);
    }
    
    public OPSlot OPSlotServiceImpl.updateOPSlot(OPSlot OPSlot_) {
        return oPSlotRepository.save(OPSlot_);
    }
    
}
